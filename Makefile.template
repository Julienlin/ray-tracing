##
# ray-tracing
#
# @file
# @version 0.1

SRCDIR= src
BUILDDIR= build
AIM=rayTracing
TARGET = bin/$(AIM)
TARGETCPP = test/$(AIM).cpp
SRCEXT = cpp
BINDIR=bin

CXX = g++
CXXFLAGS = --std=c++11 -O3 -Wall -fdiagnostics-color=always -fopenmp
INC=-I include
SOURCES= $(shell find $(SRCDIR) -type f -name *.$(SRCEXT))
OBJECTS= $(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(SOURCES:.$(SRCEXT)=.o))
EXEC = rayTracing
LIB=
MKDIR_P = mkdir -p
# SOURCES = types.o ray.o  light_source.o screen.o scene_base_object.o scene_sphere.o ray_engine.o

all : plane just_plane rayTracing docs

$(BUILDDIR)/%.o: $(SRCDIR)/%.$(SRCEXT)
	# @echo "$(SOURCES)"
  	#  mkdir -p $(BUILDDIR)
	$(shell mkdir -p $(BUILDDIR))
	$(CXX) $(CXXFLAGS) $(INC) -c -o $@ $<

$(TARGET): $(OBJECTS) $(TARGETCPP)
	$(CXX) $(CXXFLAGS) $(INC) $^ -o $(TARGET) $(LIB)

plane: $(OBJECTS) test/plane.cpp
	$(CXX) $(CXXFLAGS) $(INC) $^ -o $(BINDIR)/$@ $(LIB)

just_plane : $(OBJECTS) test/just_plane.cpp
	$(CXX) $(CXXFLAGS) $(INC) -o $(BINDIR)/$@ $^

rayTracing: $(OBJECTS) test/rayTracing.cpp
	$(CXX) $(CXXFLAGS) $(INC) $^ -o $(BINDIR)/$@ $(LIB)


docs:
	rm -rf docs
	$(MKDIR_P) docs
	doxygen Doxyfile

clean:
	rm -rf $(BUILDDIR) $(TARGET) bin/*
	rm -rf docs

# end

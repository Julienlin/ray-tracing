/**
 * @file scene_plane.hpp
 * @author Julien Lin
 * @brief This file contains declaration of the ScenePlane class.
 * @version 0.1
 * @date 2020-02-09
 *
 * @copyright Copyright (c) 2020
 *
 */
#ifndef SCENE_PLANE_HPP
#define SCENE_PLANE_HPP

#include <cmath>
#include <iostream>
#include <scene_base_object.hpp>
#include <types.hpp>

/**
 * @brief This class defines a plane object in a scene.
 * @class ScenePlane
 */
class ScenePlane : public SceneBaseObject
{
private:
    position_t m_origin;
    vector_t m_e1, m_e2;
    vector_t m_normal;

public:
    /**
     * @brief Construct a new Scene Plane object
     *
     * @param surface Object that give the surface characteristic.
     * @param origin Defines a point on the plane.
     * @param e1 Defines the first direction of the plane.
     * @param e2 Defines the second direction of the plane.
     * @param reflect The coefficent of reflection of the object.
     * @param spec_reflect The coefficient of specular reflection that determines the intensity of white dots.
     * @param diff_reflect The coefficient of diffuse reflection.
     * @param amb_reflect The ambient reflection coefficient that determine the intensity of the ambient light on the object.
     * @param shine The shininess coefficient that determine the shininess of the object.
     */
    ScenePlane(ObjectBaseSurface *surface, position_t origin, vector_t e1, vector_t e2, double reflect = 0., double spec_reflect = 0.5, double diff_reflect = 0.5, double amb_reflect = 1, double shine = 10.);

    /**
     * @brief Construct a new Scene Plane object. This constructor is generated by the compiler.
     *
     */
    ScenePlane(const ScenePlane &) = default;

    /**
     * @brief Construct a new Scene Plane object. This constructor is generated by the compiler.
     *
     */
    ScenePlane(ScenePlane &&) = default;
    // ScenePlane(ObjectBaseSurface *surface, position_t origin, vector_t e1, vector_t e2);

    /**
     * @brief Get the Normal object. Implementation of the method of the motherclass SceneBaseObject.
     *
     * @param pos
     * @return vector_t
     */
    vector_t getNormal(const position_t &pos);

    /**
     * @brief Implementation of the motherclass SceneBaseObject.
     *
     * @param ray
     * @return double
     */
    double intersecDist(const Ray &ray);

    /**
     * @brief Implementation of the motherclass SceneBaseObject.
     *
     * @param pos
     * @return RGBColor
     */
    RGBColor getColor(position_t &pos) const;
};

#endif